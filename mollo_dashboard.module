<?php

/**
 * @file
 * Contains mollo_dashboard.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function mollo_dashboard_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mollo_dashboard module.
    case 'help.page.mollo_dashboard':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Dashboard Module for Mollo') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function mollo_dashboard_theme() {
  return [
    'mollo_dashboard' => [
      'render element' => 'children',
    ],
    'dashboard_block' => [
      'variables' => [
        'attributes' => [],
        'mollo_dashboard' => [],
      ],
    ],
  ];
}

// Add Library to every Page
function mollo_dashboard_page_attachments(array &$page) {
  if (!\Drupal::currentUser()->hasPermission('show dashboard')) {
    return;
  }
  $page['#attached']['library'][] = 'mollo_dashboard/button';
}

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function mollo_dashboard_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // \Drupal::messenger()->addMessage($form);
}


/**
 * Implements hook_views_pre_render().
 */
function mollo_dashboard_views_pre_render(\Drupal\views\ViewExecutable $view) {
  // Get the current display.
  $display = $view->getDisplay();

  // And get the list of extenders for this display.
  $extenders = $display->getExtenders();
  if (!isset($extenders['mollo_dashboard'])) {
    // If the id of our plugin is not in the list something is wrong.
    return;
  }

  // Retrieve the settings of our plugins using our custom plugin method.
  $metadata_values = $extenders['mollo_dashboard']->getMetadataValues();

  // Add the metadata tag for the title value.
  if (!empty($metadata_values['title'])) {
    // Generate a tag name unique for this display.
    $tag_name = 'views:' . $view->id() . ':' . $view->current_display . ':title';
    $content = $metadata_values['title'];
    $tag = [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => $tag_name,
        'content' => $content
      ],
    ];
    $view->element['#attached']['html_head'][] = [$tag, $tag_name];
  }

  // Add the metadata tag for the description value.
  if (!empty($metadata_values['description'])) {
    // Generate a tag name unique for this display.
    $tag_name = 'views:' . $view->id() . ':' . $view->current_display . ':description';
    $content = $metadata_values['description'];
    $tag = [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => $tag_name,
        'content' => $content
      ],
    ];
    $view->element['#attached']['html_head'][] = [$tag, $tag_name];
  }

}
